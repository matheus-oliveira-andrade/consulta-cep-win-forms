<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxcXD1cXFyZXFxcmVxcXJlcXFyZXFxcmVxc
        XJlcXFyZXFxcmVxcXJlcXFyZXFxcmVtbW5deXl4eAAAAAFpaWk9gYGAYW1tboFtbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/5bW1ttWlpaM1paWjNbW1t5Wlpay15eXhNcXFynW1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/5aWlpuWVlZKFtbW+dbW1tDW1tbeVtbW/9bW1vKUFBQEFtb
        W5pbW1v/W1tbol5eXh5ZWVkuW1tbxltbW/5aWlpmXFxcJ1tbW+dbW1v/W1tbQ1tbW3lbW1v/W1tb/1tb
        W8laWloRXFxcU1hYWB1bW1vGW1tbpV5eXhNbW1tMXFxcJ1tbW+ZbW1v/W1tb/1tbW0NbW1t5W1tb/1tb
        W/9bW1v+XFxcYVpaWh9bW1vaW1tb/1tbW/9bW1u3ZmZmCltbW5dbW1v/W1tb/1tbW/9bW1tDW1tbeVtb
        W/9bW1v+W1tbc1lZWShbW1viW1tb/1tbW/9bW1v/W1tb/1tbW8RhYWEVXFxcpFtbW/9bW1v/W1tbQ1tb
        W3lbW1v8W1tbYlpaWjNcXFzqW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tbz1xcXBlbW1uUW1tb/1tb
        W0NcXFxyXFxcU1lZWT9bW1vxW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1vaWlpaH1xc
        XIhbW1tDQEBABFtbWztbW1vXW1tb3VtbW91bW1vdW1tb3VtbW91bW1vdW1tb3VtbW91bW1vdW1tb3Vtb
        W8ZYWFgdQEBABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAMADAADABwAAoA0AAJGZAACOcQAAjCEAAJgR
        AACwCQAA4AUAAMADAAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABaWloRWlpaM1paWjNaWlozWlpaM1paWjNaWlozWlpaM1paWjNaWlozWlpaM1paWjNaWlozWlpaM1pa
        WjNaWlozWlpaM1paWjNaWlozWlpaM1paWjNaWlozWlpaM1paWjNaWlozWlpaM1lZWS4AAAAAAAAAAAAA
        AAAAAAAAAAAAAFVVVQlbW1u5W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v8W1tbXAAA
        AAAAAAAAAAAAAAAAAABcXFxLAAAAAFVVVQlbW1u5W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/Ftb
        W1wAAAAASUlJB1paWkQAAAAAAAAAAFtbW+tbW1tJAAAAAFVVVQlbW1u5W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/xbW1tcAAAAAGZmZgVbW1uuW1tbhgAAAAAAAAAAW1tb8lpaWvhbW1tJAAAAAGBgYAhbW1u4W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v8WlpaWwAAAABmZmYFW1tbrltbW/9bW1uGAAAAAAAAAABbW1vyW1tb/1tbW/dbW1tJAAAAAGBg
        YAhbW1u3W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/FtbW1oAAAAAZmZmBVtbW65bW1v/W1tb/1tbW4YAAAAAAAAAAFtbW/JbW1v/W1tb/1tb
        W/dbW1tJAAAAAGZmZgVbW1utW1tb/1tbW/9bW1v/W1tb/1tbW9JZWVlNWFhYGllZWStcXFx9W1tb91tb
        W/9bW1v/W1tb/1tbW/lZWVlNAAAAAGZmZgVbW1uuW1tb/1tbW/9bW1v/W1tbhgAAAAAAAAAAW1tb8ltb
        W/9bW1v/W1tb/1tbW/dbW1tJAAAAAGZmZgVaWlqsW1tb/1tbW/9cXFykVVVVBgAAAAAAAAAAAAAAAAAA
        AABcXFwvW1tb5ltbW/9aWlr4W1tbTAAAAABmZmYFW1tbrltbW/9bW1v/W1tb/1tbW/9bW1uGAAAAAAAA
        AABbW1vyW1tb/1tbW/9bW1v/W1tb/1tbW/dcXFxIAAAAAGBgYAhbW1u2W1tbn0BAQAQAAAAAW1tbUVtb
        W9NbW1uuXV1dFgAAAABcXFwnW1tb3VxcXFkAAAAAZmZmBVtbW65bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W4YAAAAAAAAAAFtbW/JbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/dcXFxIAAAAAICAgAIAAAAAAAAAAFtb
        W1xbW1v7W1tb/1tbW/9cXFzRYGBgGAAAAACAgIACAAAAAFVVVQNcXFynW1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tbhgAAAAAAAAAAW1tb8ltbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/laWloiAAAAAAAA
        AABbW1trW1tb/VtbW/9bW1v/W1tb/1tbW/9bW1vbWFhYIAAAAAAAAAAAW1tbiVtbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1uGAAAAAAAAAABbW1vyW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v+W1tbcAAA
        AAAAAAAAWlpad1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1vkW1tbKgAAAABeXl4TW1tbyVtb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW4YAAAAAAAAAAFtbW/JbW1v/W1tb/1tbW/9bW1v/W1tb+1pa
        WmAAAAAAAAAAAVpaWo1bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1vrXV1dNAAA
        AABVVVUMW1tbvFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tbhgAAAAAAAAAAW1tb8ltbW/9bW1v/W1tb/1pa
        WvhcXFxQAAAAAFVVVQNbW1udW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1vyXFxcQAAAAABmZmYFXFxcp1tbW/9bW1v/W1tb/1tbW/9bW1uGAAAAAAAAAABbW1vyW1tb/1tb
        W/9bW1vwXFxcPQAAAABJSUkHWlparFtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v3XFxcTgAAAACAgIACW1tbl1tbW/9bW1v/W1tb/1tbW4YAAAAAAAAAAFtb
        W/JbW1v/W1tb6FhYWDEAAAAAXV1dC1paWrpbW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v7W1tbXAAAAAAAAAABXFxciFtbW/9bW1v/W1tbhgAA
        AAAAAAAAW1tb8ltbW+BeXl4mAAAAAFpaWhFbW1vGW1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v9XFxcbAAAAAAAAAAAXFxcdVtb
        W/5bW1uGAAAAAAAAAABbW1vKWFhYHQAAAABgYGAYXFxc0VtbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/WlpadwAA
        AAAAAAAAW1tbZVtbW4QAAAAAAAAAAFVVVQwAAAAAXV1dIVtbW9tbW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tbW/9bW1v/W1tb/1tb
        W/9bW1v/XFxcjgAAAAEAAAAAVVVVDAAAAAAAAAAAAAAAAGBgYBBbW1umW1tbu1tbW7tbW1u7W1tbu1tb
        W7tbW1u7W1tbu1tbW7tbW1u7W1tbu1tbW7tbW1u7W1tbu1tbW7tbW1u7W1tbu1tbW7tbW1u7W1tbu1tb
        W7tbW1u7W1tbu1tbW7tbW1u7XFxcZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////////////////////////gAAAP8AAAH7gA
        ADmcAABxjgAA4YcDwcGDh+OBgc53AYD8PgGAeBwBgPAOAYHABwGDgAOBhwABwY4AAOGcAAB5uAAAPfAA
        AA/gAAAP////////////////////////////////
</value>
  </data>
</root>